#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update

auth0.issuer=https://whatthetek.auth0.com/
auth0.apiAudience=http://localhost:8080

#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.url=jdbc:postgresql://ec2-54-243-241-62.compute-1.amazonaws.com:5432/dds82guvjblfjs?blogUser=kdehjxvdvijole&password=92f063c80d0c2367188dcd5b21ed7245260b3226562aec7d798cc7e862a3fc0c
spring.datasource.username=kdehjxvdvijole
spring.datasource.password=92f063c80d0c2367188dcd5b21ed7245260b3226562aec7d798cc7e862a3fc0c
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.hibernate.ddl-auto=create

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir= ./files
